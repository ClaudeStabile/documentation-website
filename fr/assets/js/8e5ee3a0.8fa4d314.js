"use strict";(self.webpackChunknewdoc=self.webpackChunknewdoc||[]).push([[2941],{3905:(e,t,l)=>{l.d(t,{Zo:()=>d,kt:()=>m});var n=l(7294);function i(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function s(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){i(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function a(e,t){if(null==e)return{};var l,n,i=function(e,t){if(null==e)return{};var l,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(i[l]=e[l]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(i[l]=e[l])}return i}var o=n.createContext({}),p=function(e){var t=n.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):s(s({},t),e)),l},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var l=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=p(l),m=i,k=c["".concat(o,".").concat(m)]||c[m]||u[m]||r;return l?n.createElement(k,s(s({ref:t},d),{},{components:l})):n.createElement(k,s({ref:t},d))}));function m(e,t){var l=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=l.length,s=new Array(r);s[0]=c;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var p=2;p<r;p++)s[p]=l[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,l)}c.displayName="MDXCreateElement"},5590:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>p});var n=l(7462),i=(l(7294),l(3905));const r={sidebar_label:"Deploy a skill",sidebar_position:3},s="Deploy a skill",a={unversionedId:"developpers/agent/skills/devguide/install_my_skills",id:"developpers/agent/skills/devguide/install_my_skills",title:"Deploy a skill",description:"Install with LinTO-Admin",source:"@site/docs/developpers/agent/skills/devguide/install_my_skills.md",sourceDirName:"developpers/agent/skills/devguide",slug:"/developpers/agent/skills/devguide/install_my_skills",permalink:"/fr/docs/developpers/agent/skills/devguide/install_my_skills",draft:!1,editUrl:"https://github.com/linto-ai/documentation-website/tree/source/docs/developpers/agent/skills/devguide/install_my_skills.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Deploy a skill",sidebar_position:3},sidebar:"devSidebar",previous:{title:"Declare intentions and command trigger phrases",permalink:"/fr/docs/developpers/agent/skills/devguide/format"},next:{title:"Node-RED LinTO Framework",permalink:"/fr/docs/developpers/agent/skills/components"}},o={},p=[{value:"Install with LinTO-Admin",id:"install-with-linto-admin",level:2},{value:"Local developpement &amp; tests prerequistes",id:"local-developpement--tests-prerequistes",level:2},{value:"Local install",id:"local-install",level:2},{value:"Docker install",id:"docker-install",level:2},{value:"NPM Registry",id:"npm-registry",level:2},{value:"Default registry",id:"default-registry",level:3},{value:"Private registry",id:"private-registry",level:3}],d={toc:p};function u(e){let{components:t,...l}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"deploy-a-skill"},"Deploy a skill"),(0,i.kt)("h2",{id:"install-with-linto-admin"},"Install with LinTO-Admin"),(0,i.kt)("p",null,"How to install my skill in LinTO platform server ?"),(0,i.kt)("p",null,"An archive of your skills (",(0,i.kt)("inlineCode",{parentName:"p"},".zip")," or ",(0,i.kt)("inlineCode",{parentName:"p"},".tar"),") need to be create. On that archive make sure to :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Copy the file ",(0,i.kt)("strong",{parentName:"li"},"package.json")," to the created folder : ",(0,i.kt)("strong",{parentName:"li"},"package/package.json"))),(0,i.kt)("p",null,"Next, use ",(0,i.kt)("strong",{parentName:"p"},"import a skill")," in ",(0,i.kt)("strong",{parentName:"p"},"skill manager")," from linto-admin to install the archive."),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"/docs/skills/depguide/admin_install_skill.png",alt:"manage_palette"})),(0,i.kt)("p",null,"Lastly if the installation is complete, it will be listed on ",(0,i.kt)("strong",{parentName:"p"},"Local skills")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The remaining of this doc is kinda obsolete as the LinTO-Admin interface conviniently enables its users to upload a skill as a .tgz bundle to install it directly on your LinTO server-platform. Use these informations wisely if you want to develop or modify skills locally before server upload")),(0,i.kt)("h2",{id:"local-developpement--tests-prerequistes"},"Local developpement & tests prerequistes"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Business-Logic-Server")," is required, This is the LinTO workflow manager, based on the framework Node-RED. It\u2019s a programming tool for wiring different node / skill. Each skill have their own action allowing together to become a LinTO functionality."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/linto-ai/linto-platform-business-logic-server\ncd linto-platform-business-logic-server\nnpm install\n")),(0,i.kt)("p",null,"And a ",(0,i.kt)("strong",{parentName:"p"},"linto-skill"),", that's the main point of these page. For this tutorial, we're going to use the provided ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/linto-ai/linto-skills-template"},"skill template")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/linto-ai/linto-skills-template skills/linto-skills-template\ncd skills/linto-skills-template\nnpm install\n")),(0,i.kt)("h2",{id:"local-install"},"Local install"),(0,i.kt)("p",null,"How to install my skill in LinTO business-logic server ?\nYou just need to install the skill like any npm module"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"cd path-to-/linto-platform-business-logic-server/\nnpm install -s path-to-/skills/linto-skills-template/\n\n// Start the business-logic server \nnpm start // or 'node index.js'\n")),(0,i.kt)("h2",{id:"docker-install"},"Docker install"),(0,i.kt)("p",null,"How to install my skill while using LinTO business-logic server in a Docker network ?"),(0,i.kt)("p",null,"You might use a Docker volume. That volume need to map your local skill with the docker folder skill. ",(0,i.kt)("em",{parentName:"p"},"(default skill folder location ",(0,i.kt)("inlineCode",{parentName:"em"},"/root/.node-red/node_modules/")," )")),(0,i.kt)("p",null,"That should look like that :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"    volumes: # Make sure that the left path is pointing you'r folder skills\n      - path-to/skills-folder/:/root/.node-red/node_modules/\n")),(0,i.kt)("p",null,"Then run the docker with ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose up")),(0,i.kt)("h2",{id:"npm-registry"},"NPM Registry"),(0,i.kt)("p",null,"You can also publish a skill in a registry to be able to install it like a node module"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Publish skill\ncd path-to-skills/linto-skills-template\nnpm publish\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Install skill into business-logic server\ncd path-to-business-logic server/\nnpm install -s linto-module-name\n")),(0,i.kt)("h3",{id:"default-registry"},"Default registry"),(0,i.kt)("p",null,"The default registry is the ",(0,i.kt)("inlineCode",{parentName:"p"},"registry.npmjs.com"),". I would not recommend these part until the skill is ready to be release."),(0,i.kt)("h3",{id:"private-registry"},"Private registry"),(0,i.kt)("p",null,"A private repository can be used : ",(0,i.kt)("inlineCode",{parentName:"p"},"npm set registry my.repository.url"),"."))}u.isMDXComponent=!0}}]);