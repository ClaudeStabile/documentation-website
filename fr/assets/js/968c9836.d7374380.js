"use strict";(self.webpackChunknewdoc=self.webpackChunknewdoc||[]).push([[9405],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=o.createContext({}),u=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=u(e.components);return o.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,h=p["".concat(i,".").concat(m)]||p[m]||c[m]||a;return r?o.createElement(h,s(s({ref:t},d),{},{components:r})):o.createElement(h,s({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var u=2;u<a;u++)s[u]=r[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2085:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const a={sidebar_label:"Prepare infrastructure",sidebar_position:1},s="Plan and setup the infrastructure for tests or production",l={unversionedId:"developpers/agent/server/infrastructure",id:"developpers/agent/server/infrastructure",title:"Plan and setup the infrastructure for tests or production",description:"Learn how to prepare your server infrastructure to deploy LinTO",source:"@site/docs/developpers/agent/server/infrastructure.md",sourceDirName:"developpers/agent/server",slug:"/developpers/agent/server/infrastructure",permalink:"/fr/docs/developpers/agent/server/infrastructure",draft:!1,editUrl:"https://github.com/linto-ai/documentation-website/tree/source/docs/developpers/agent/server/infrastructure.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Prepare infrastructure",sidebar_position:1},sidebar:"devSidebar",previous:{title:"LinTO Server Platform",permalink:"/fr/docs/developpers/agent/server/"},next:{title:"Deploy LinTO Platform Server",permalink:"/fr/docs/developpers/agent/server/stack_deploy"}},i={},u=[{value:"Prerequistes",id:"prerequistes",level:2},{value:"Docker swarm mode",id:"docker-swarm-mode",level:2},{value:"Shared storage",id:"shared-storage",level:2},{value:"Create directories for GlusterFS storage",id:"create-directories-for-glusterfs-storage",level:3},{value:"Install Gluster FS",id:"install-gluster-fs",level:3},{value:"Peer Gluster FS nodes",id:"peer-gluster-fs-nodes",level:3},{value:"Setup the replicated volume",id:"setup-the-replicated-volume",level:3},{value:"Start the replicated volume",id:"start-the-replicated-volume",level:3},{value:"Prepare mount points for the volume on each node",id:"prepare-mount-points-for-the-volume-on-each-node",level:3},{value:"Prepare automount shared volume on each node (effective after reboot)",id:"prepare-automount-shared-volume-on-each-node-effective-after-reboot",level:3},{value:"Mount your volume on each node",id:"mount-your-volume-on-each-node",level:3}],d={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"plan-and-setup-the-infrastructure-for-tests-or-production"},"Plan and setup the infrastructure for tests or production"),(0,n.kt)("p",null,"Learn how to prepare your ",(0,n.kt)("strong",{parentName:"p"},"server infrastructure")," to deploy ",(0,n.kt)("strong",{parentName:"p"},"LinTO")),(0,n.kt)("h2",{id:"prerequistes"},"Prerequistes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Docker CE with Docker Engine > 1.12 for swarm mode availability. See : ",(0,n.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/installation/"},"https://docs.docker.com/engine/installation/"),",  ",(0,n.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/"},"https://docs.docker.com/compose/install/"),"."),(0,n.kt)("li",{parentName:"ul"},"Debian (or Ubuntu hosts or VM hosts)"),(0,n.kt)("li",{parentName:"ul"},"Private network (VLAN) established and fuly routed between hosts."),(0,n.kt)("li",{parentName:"ul"},"Public network interface on at least one of the cluster's nodes for ingress traffic")),(0,n.kt)("admonition",{title:"Note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Our service stack relies on ",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/glossary/?term=swarm%20mode"},"Docker Swarm Mode")," for orchestrating containers and services. This tutorial treats your infrastructure as ",(0,n.kt)("strong",{parentName:"p"},"a multi-host cluster"),". If you deploy the stack in a mono-host Docker Swarm Cluster (wich is obviously not recommanded for production) make sure to read the ")),(0,n.kt)("h2",{id:"docker-swarm-mode"},"Docker swarm mode"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"1 - The first machine of your cluster will become a ",(0,n.kt)("strong",{parentName:"li"},"docker swarm manager node"),". ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker swarm init --advertise-addr <My private IP for cluster communication>\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"2 - Get a join token for subsequent worker nodes")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker swarm join-token worker\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"3 - This command outputs something like :")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker swarm join --token SWMTKN-1-xxx<Manager IP for cluster communication>:<Some TCP port used by docker swarm>\n")),(0,n.kt)("p",null,"--\x3e Use this command on every other machine that needs to join your docker swarm cluster"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"4 - List nodes in the cluster hostname Private Ip for nodes communication")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'for NODE in $(docker node ls --format \'{{.Hostname}}\');\ndo echo -e "$(docker node inspect --format \'{{.Status.Addr}}\' "${NODE}") "${NODE}""; done\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"5 - Put the corresponding pairs in /etc/hosts of every cluster node to enable domain name resolution between cluster's nodes.")),(0,n.kt)("h2",{id:"shared-storage"},"Shared storage"),(0,n.kt)("p",null,"A good design pattern for highly available applications is to deploy the application as a container on a Docker Swarm cluster with persistent storage provided by GlusterFS. GlusterFS is a fast shared filesystem that can keep the container volume in sync between multiple nodes of the Docker Swarm cluster.  In the event a node dies, Docker Swarm will spin up the container on another node. GlusterFS will ensure the container has access to the same data when it comes up."),(0,n.kt)("p",null,"In our case, ",(0,n.kt)("a",{parentName:"p",href:"post_install/service-manager/stt_manager_how2use"},"Platform-Service-Manager")," will need read / write access on a shared folder made available on every node of your cluster for AI models used by transcription services. In this tutorial we will use a GlusterFS share folder."),(0,n.kt)("h3",{id:"create-directories-for-glusterfs-storage"},"Create directories for GlusterFS storage"),(0,n.kt)("p",null,"Setup the glusterFS directories where the gluster \u201cbricks\u201d (replicated volume) will reside. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"mkdir -p ~/linto_shared/data\nmkdir -p ~/linto_shared/data\n... and so on on every node of your swarm cluster\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note for single Machine Deployement:")," If you do not intent to add other machines to the cluster later, you can stop right here and jump to ",(0,n.kt)("a",{parentName:"p",href:"stack_deploy"},"Server Installation"),"."),(0,n.kt)("h3",{id:"install-gluster-fs"},"Install Gluster FS"),(0,n.kt)("p",null,"Here, we use ",(0,n.kt)("a",{parentName:"p",href:"https://docs.gluster.org/en/latest/Install-Guide/Install/"},"GLusterFS v7.0")),(0,n.kt)("p",null,"Run this on every cluster's nodes"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"wget -O - https://download.gluster.org/pub/gluster/glusterfs/7/rsa.pub | sudo apt-key add -\nDEBID=$(grep 'VERSION_ID=' /etc/os-release | cut -d '=' -f 2 | tr -d '\"')\nDEBVER=$(grep 'VERSION=' /etc/os-release | grep -Eo '[a-z]+')\nDEBARCH=$(dpkg --print-architecture)\necho deb https://download.gluster.org/pub/gluster/glusterfs/LATEST/Debian/${DEBID}/${DEBARCH}/apt ${DEBVER} main | sudo tee --append /etc/apt/sources.list.d/gluster.list\nsudo apt-get install && sudo apt-get install glusterfs-server -y\nsudo systemctl enable --now glusterd\n")),(0,n.kt)("h3",{id:"peer-gluster-fs-nodes"},"Peer Gluster FS nodes"),(0,n.kt)("p",null,'On the swarm cluster manager node, supposedly the first "brick" of the distributed and replicated file storage, run :'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo gluster peer probe <HostName-X for node X of the cluster>\n")),(0,n.kt)("p",null,"--\x3e Use this command for every other cluster's nodes hostnames."),(0,n.kt)("h3",{id:"setup-the-replicated-volume"},"Setup the replicated volume"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo gluster volume create linto_shared \\\nreplica <Number of cluster nodes> \\\n<First Node HostName>:<corresponding folder> \\\n<Second NodeHostName>:<corresponding folder> \\\n... (etc)\nforce\n")),(0,n.kt)("p",null,'--\x3e Use "force" directive if you want to use some folder inside the node root folder.'),(0,n.kt)("h3",{id:"start-the-replicated-volume"},"Start the replicated volume"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo gluster volume start linto_shared\n")),(0,n.kt)("h3",{id:"prepare-mount-points-for-the-volume-on-each-node"},"Prepare mount points for the volume on each node"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ~/linto_shared_mount\n")),(0,n.kt)("p",null,"This is where the services will access the filesystem provided by the Gluster FS volume "),(0,n.kt)("h3",{id:"prepare-automount-shared-volume-on-each-node-effective-after-reboot"},"Prepare automount shared volume on each node (effective after reboot)"),(0,n.kt)("admonition",{title:"Use this wisely and don't break your /etc/fstab",type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"command will look like :"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'localhost:/linto_shared <Local mount point> glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' | sudo tee --append /etc/fstab\nmount -a\n"))),(0,n.kt)("h3",{id:"mount-your-volume-on-each-node"},"Mount your volume on each node"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mount.glusterfs localhost:/shared_linto <Local mount point>\n")))}c.isMDXComponent=!0}}]);