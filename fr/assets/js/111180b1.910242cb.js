"use strict";(self.webpackChunknewdoc=self.webpackChunknewdoc||[]).push([[7305],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return r?a.createElement(g,l(l({ref:t},p),{},{components:r})):a.createElement(g,l({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3621:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const i={},l="Deploy a Large vocabulary file transcription service",o={unversionedId:"developpers/agent/server/post_install/service-manager/lv_service",id:"developpers/agent/server/post_install/service-manager/lv_service",title:"Deploy a Large vocabulary file transcription service",description:'A file transcription service allows to submit audio files to an API that will return a text transcription. File transcription can be used as itself and is a prerequisite of other uses. "Large vocabulary" implies that the transcription won\'t be limited to preset sentences and intend to cover an entire language.',source:"@site/docs/developpers/agent/server/post_install/service-manager/lv_service.md",sourceDirName:"developpers/agent/server/post_install/service-manager",slug:"/developpers/agent/server/post_install/service-manager/lv_service",permalink:"/fr/docs/developpers/agent/server/post_install/service-manager/lv_service",draft:!1,editUrl:"https://github.com/linto-ai/documentation-website/tree/source/docs/developpers/agent/server/post_install/service-manager/lv_service.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"Deploy a command transcription service",permalink:"/fr/docs/developpers/agent/server/post_install/service-manager/command_service"},next:{title:"Deploy a Large Vocabulary Streaming Transcription service",permalink:"/fr/docs/developpers/agent/server/post_install/service-manager/streaming_service_create"}},s={},c=[{value:"Prerequisistes",id:"prerequisistes",level:2},{value:"Creating the service",id:"creating-the-service",level:2},{value:"1- Create a large vocabulary language model",id:"1--create-a-large-vocabulary-language-model",level:4},{value:"2- Create a file transcription service",id:"2--create-a-file-transcription-service",level:4},{value:"3- Submit transcription requests",id:"3--submit-transcription-requests",level:4}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"deploy-a-large-vocabulary-file-transcription-service"},"Deploy a Large vocabulary file transcription service"),(0,n.kt)("p",null,'A file transcription service allows to submit audio files to an API that will return a text transcription. File transcription can be used as itself and is a prerequisite of other uses. "Large vocabulary" implies that the transcription won\'t be limited to preset sentences and intend to cover an entire language.'),(0,n.kt)("p",null,"The following step are accomplished using the ",(0,n.kt)("a",{parentName:"p",href:"../services/stt_manager.md"},"LinTO Platform Service Manager")," web API on which requests can be executed using the swagger deployed within the platform at ",(0,n.kt)("inlineCode",{parentName:"p"},"[LINTO_STACK_DOMAIN]/stt-manager/api-doc/"),"."),(0,n.kt)("h2",{id:"prerequisistes"},"Prerequisistes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You have a deployed stack with LinTO Platform Service Manager running."),(0,n.kt)("li",{parentName:"ul"},"You have access to the LinTO Platform Service Manager Swagger at ",(0,n.kt)("inlineCode",{parentName:"li"},"[LINTO_STACK_DOMAIN]/stt-manager/api-doc/"),"."),(0,n.kt)("li",{parentName:"ul"},"You have created an acoustic model for your language. If not see ",(0,n.kt)("a",{parentName:"li",href:"use_case/acoustic_model"},"Create an acoustic model"))),(0,n.kt)("h2",{id:"creating-the-service"},"Creating the service"),(0,n.kt)("p",null,"In the following steps we will create a large vocabulary file transcription service. "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Create a large vocabulary language model"),(0,n.kt)("li",{parentName:"ol"},"Create a file transcription service"),(0,n.kt)("li",{parentName:"ol"},"Submit transcription requests")),(0,n.kt)("h4",{id:"1--create-a-large-vocabulary-language-model"},"1- Create a large vocabulary language model"),(0,n.kt)("p",null,"In this step you will create a large vocabulary language model."),(0,n.kt)("p",null,"A language model takes the phonemes extracted from the audio signal by the acoustic model and map them with known sentences."),(0,n.kt)("img",{src:"/docs/use_cases/language.png"}),(0,n.kt)("p",null,"Connect to the STT Service Manager Swagger."),(0,n.kt)("img",{src:"/docs/use_cases/language_large.png"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"lang"),": The intended language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"file")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"link"),": Set the path or the link of a large language model."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"acousticModel")," : The acoustic model you created for the intended language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"type"),": Select ",(0,n.kt)("strong",{parentName:"li"},"lvcsr")," for large vocabulary.")),(0,n.kt)("p",null,"Tap ",(0,n.kt)("inlineCode",{parentName:"p"},"Execute")," and the LinTO Platform Service Manager should return a code 200."),(0,n.kt)("p",null,"Now you have a large vocabulary language model set in your STT Service Manager."),(0,n.kt)("h4",{id:"2--create-a-file-transcription-service"},"2- Create a file transcription service"),(0,n.kt)("p",null,"In this step we will create a command file transcription service."),(0,n.kt)("p",null,"The transcription service wrap the acoustic model and the language model to produce a transcription pipeline and provide a runtime API to submit transcription requests."),(0,n.kt)("p",null,"Connect to the STT Service Manager Swagger."),(0,n.kt)("img",{src:"/docs/use_cases/command_service.png"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"serviceId"),": Service Name."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"replica"),": Set the number of instance you wish to create (It can be changed later)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"tag")," : Set to ",(0,n.kt)("strong",{parentName:"li"},"offline")," for a file transcription service."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"languageModel")," : Set the modelId of the command language model created on the previous step."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"externalAccess")," : Whether or not the API can be accessed from outside the stack. ")),(0,n.kt)("p",null,"You have now a live large vocabulary file transcription service deployed on your stack."),(0,n.kt)("h4",{id:"3--submit-transcription-requests"},"3- Submit transcription requests"),(0,n.kt)("p",null,"With the transcription service operationnal you can now execute transcription requests."),(0,n.kt)("p",null,"You can try submiting a request on the swagger :"),(0,n.kt)("img",{src:"/docs/use_cases/transcription.png"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"serviceId"),": Your transcription service."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"file"),": The audio file you wish to transcribe. ")),(0,n.kt)("p",null,"Doing so will also display a template request that you may use to submit distant request."),(0,n.kt)("p",null,"Template request is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"curl --request POST \\\n--url [LINTO_STACK_DOMAIN]/stt/[serviceId]/transcribe \\   \n--header 'accept: text/plain' \\\n# *optional if you plateform requires authentication --header 'authorization: Basic [authentication token]'  \n--header 'content-type: multipart/form-data boundary=---011000010111000001101001' \\   \n--form file=[fileName] \\\n--form speaker=no \\\n-F \"file=@[filePath]\" \n")))}u.isMDXComponent=!0}}]);